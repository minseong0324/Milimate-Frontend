/// <reference types="react" />
/// <reference types="react" />
export declare const s: {
    MainWrapper: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
    CustomLi: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLLIElement> | undefined;
        key?: import("react").Key | null | undefined;
        value?: string | number | readonly string[] | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLLIElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLLIElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLLIElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLLIElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLLIElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLLIElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLLIElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLLIElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLLIElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLLIElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLLIElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLLIElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLLIElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLLIElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLLIElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLLIElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLLIElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLLIElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLLIElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLLIElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLLIElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLLIElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLLIElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLLIElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLLIElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLLIElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLLIElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLLIElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLLIElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLLIElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLLIElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLLIElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLLIElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLLIElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLLIElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLLIElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLLIElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLLIElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLLIElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLLIElement> | undefined;
    }>;
    CustomUl: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLUListElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLUListElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLUListElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLUListElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLUListElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLUListElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLUListElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLUListElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLUListElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLUListElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLUListElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLUListElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLUListElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLUListElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLUListElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLUListElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLUListElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLUListElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLUListElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLUListElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLUListElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLUListElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLUListElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLUListElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLUListElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLUListElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLUListElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLUListElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLUListElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLUListElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLUListElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLUListElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLUListElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLUListElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLUListElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLUListElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLUListElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLUListElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLUListElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLUListElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLUListElement> | undefined;
    }>;
    VoidQuestion: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
    LiLayout: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
    DayText: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLParagraphElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLParagraphElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLParagraphElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLParagraphElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLParagraphElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLParagraphElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLParagraphElement> | undefined;
    }>;
    Splice: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
    GreyDayText: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLParagraphElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLParagraphElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLParagraphElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLParagraphElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLParagraphElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLParagraphElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLParagraphElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLParagraphElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLParagraphElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLParagraphElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLParagraphElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLParagraphElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLParagraphElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLParagraphElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLParagraphElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLParagraphElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLParagraphElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLParagraphElement> | undefined;
    }>;
    BackButton: import("styled-components").IStyledComponent<"web", {
        slot?: string | undefined;
        style?: import("react").CSSProperties | undefined;
        title?: string | undefined;
        src?: string | undefined;
        key?: import("react").Key | null | undefined;
        alt?: string | undefined;
        crossOrigin?: "" | "anonymous" | "use-credentials" | undefined;
        decoding?: "async" | "auto" | "sync" | undefined;
        height?: string | number | undefined;
        loading?: "eager" | "lazy" | undefined;
        referrerPolicy?: import("react").HTMLAttributeReferrerPolicy | undefined;
        sizes?: string | undefined;
        srcSet?: string | undefined;
        useMap?: string | undefined;
        width?: string | number | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        tabIndex?: number | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLImageElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLImageElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLImageElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLImageElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLImageElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLImageElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLImageElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLImageElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLImageElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLImageElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLImageElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLImageElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLImageElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLImageElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLImageElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLImageElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLImageElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLImageElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLImageElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLImageElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLImageElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLImageElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLImageElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLImageElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLImageElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLImageElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLImageElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLImageElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLImageElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLImageElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLImageElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLImageElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLImageElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLImageElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLImageElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLImageElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLImageElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLImageElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLImageElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLImageElement> | undefined;
        ref?: ((instance: HTMLImageElement | null) => void) | import("react").RefObject<HTMLImageElement> | null | undefined;
    }>;
    BackgroundContainer: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
    Container: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
    Text: import("styled-components").IStyledComponent<"web", {
        ref?: import("react").LegacyRef<HTMLDivElement> | undefined;
        key?: import("react").Key | null | undefined;
        defaultChecked?: boolean | undefined;
        defaultValue?: string | number | readonly string[] | undefined;
        suppressContentEditableWarning?: boolean | undefined;
        suppressHydrationWarning?: boolean | undefined;
        accessKey?: string | undefined;
        autoFocus?: boolean | undefined;
        className?: string | undefined;
        contentEditable?: "inherit" | (boolean | "true" | "false") | undefined;
        contextMenu?: string | undefined;
        dir?: string | undefined;
        draggable?: (boolean | "true" | "false") | undefined;
        hidden?: boolean | undefined;
        id?: string | undefined;
        lang?: string | undefined;
        nonce?: string | undefined;
        placeholder?: string | undefined;
        slot?: string | undefined;
        spellCheck?: (boolean | "true" | "false") | undefined;
        style?: import("react").CSSProperties | undefined;
        tabIndex?: number | undefined;
        title?: string | undefined;
        translate?: "yes" | "no" | undefined;
        radioGroup?: string | undefined;
        role?: import("react").AriaRole | undefined;
        about?: string | undefined;
        content?: string | undefined;
        datatype?: string | undefined;
        inlist?: any;
        prefix?: string | undefined;
        property?: string | undefined;
        rel?: string | undefined;
        resource?: string | undefined;
        rev?: string | undefined;
        typeof?: string | undefined;
        vocab?: string | undefined;
        autoCapitalize?: string | undefined;
        autoCorrect?: string | undefined;
        autoSave?: string | undefined;
        color?: string | undefined;
        itemProp?: string | undefined;
        itemScope?: boolean | undefined;
        itemType?: string | undefined;
        itemID?: string | undefined;
        itemRef?: string | undefined;
        results?: number | undefined;
        security?: string | undefined;
        unselectable?: "on" | "off" | undefined;
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | undefined;
        is?: string | undefined;
        'aria-activedescendant'?: string | undefined;
        'aria-atomic'?: (boolean | "true" | "false") | undefined;
        'aria-autocomplete'?: "none" | "list" | "inline" | "both" | undefined;
        'aria-braillelabel'?: string | undefined;
        'aria-brailleroledescription'?: string | undefined;
        'aria-busy'?: (boolean | "true" | "false") | undefined;
        'aria-checked'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-colcount'?: number | undefined;
        'aria-colindex'?: number | undefined;
        'aria-colindextext'?: string | undefined;
        'aria-colspan'?: number | undefined;
        'aria-controls'?: string | undefined;
        'aria-current'?: boolean | "time" | "step" | "true" | "false" | "page" | "location" | "date" | undefined;
        'aria-describedby'?: string | undefined;
        'aria-description'?: string | undefined;
        'aria-details'?: string | undefined;
        'aria-disabled'?: (boolean | "true" | "false") | undefined;
        'aria-dropeffect'?: "none" | "link" | "copy" | "execute" | "move" | "popup" | undefined;
        'aria-errormessage'?: string | undefined;
        'aria-expanded'?: (boolean | "true" | "false") | undefined;
        'aria-flowto'?: string | undefined;
        'aria-grabbed'?: (boolean | "true" | "false") | undefined;
        'aria-haspopup'?: boolean | "dialog" | "menu" | "true" | "false" | "grid" | "listbox" | "tree" | undefined;
        'aria-hidden'?: (boolean | "true" | "false") | undefined;
        'aria-invalid'?: boolean | "true" | "false" | "grammar" | "spelling" | undefined;
        'aria-keyshortcuts'?: string | undefined;
        'aria-label'?: string | undefined;
        'aria-labelledby'?: string | undefined;
        'aria-level'?: number | undefined;
        'aria-live'?: "off" | "assertive" | "polite" | undefined;
        'aria-modal'?: (boolean | "true" | "false") | undefined;
        'aria-multiline'?: (boolean | "true" | "false") | undefined;
        'aria-multiselectable'?: (boolean | "true" | "false") | undefined;
        'aria-orientation'?: "horizontal" | "vertical" | undefined;
        'aria-owns'?: string | undefined;
        'aria-placeholder'?: string | undefined;
        'aria-posinset'?: number | undefined;
        'aria-pressed'?: boolean | "true" | "false" | "mixed" | undefined;
        'aria-readonly'?: (boolean | "true" | "false") | undefined;
        'aria-relevant'?: "text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals" | undefined;
        'aria-required'?: (boolean | "true" | "false") | undefined;
        'aria-roledescription'?: string | undefined;
        'aria-rowcount'?: number | undefined;
        'aria-rowindex'?: number | undefined;
        'aria-rowindextext'?: string | undefined;
        'aria-rowspan'?: number | undefined;
        'aria-selected'?: (boolean | "true" | "false") | undefined;
        'aria-setsize'?: number | undefined;
        'aria-sort'?: "none" | "ascending" | "descending" | "other" | undefined;
        'aria-valuemax'?: number | undefined;
        'aria-valuemin'?: number | undefined;
        'aria-valuenow'?: number | undefined;
        'aria-valuetext'?: string | undefined;
        children?: import("react").ReactNode;
        dangerouslySetInnerHTML?: {
            __html: string | TrustedHTML;
        } | undefined;
        onCopy?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCopyCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCut?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCutCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPaste?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onPasteCapture?: import("react").ClipboardEventHandler<HTMLDivElement> | undefined;
        onCompositionEnd?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionEndCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStart?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionStartCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdate?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onCompositionUpdateCapture?: import("react").CompositionEventHandler<HTMLDivElement> | undefined;
        onFocus?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onFocusCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlur?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onBlurCapture?: import("react").FocusEventHandler<HTMLDivElement> | undefined;
        onChange?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onChangeCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onBeforeInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInput?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInputCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onReset?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onResetCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmit?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onSubmitCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalid?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onInvalidCapture?: import("react").FormEventHandler<HTMLDivElement> | undefined;
        onLoad?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onError?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onErrorCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onKeyDown?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyDownCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPress?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyPressCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUp?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onKeyUpCapture?: import("react").KeyboardEventHandler<HTMLDivElement> | undefined;
        onAbort?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAbortCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThrough?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onCanPlayThroughCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onDurationChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptied?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEmptiedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncrypted?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEncryptedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEnded?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onEndedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedData?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedDataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadata?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadedMetadataCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStart?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onLoadStartCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPause?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPauseCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlay?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlaying?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onPlayingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgress?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onProgressCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onRateChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResize?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onResizeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeked?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekedCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeeking?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSeekingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalled?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onStalledCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspend?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSuspendCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdate?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTimeUpdateCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChange?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onVolumeChangeCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaiting?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onWaitingCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onAuxClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onAuxClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenu?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onContextMenuCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClick?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDoubleClickCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onDrag?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnd?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEndCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnter?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragEnterCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExit?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragExitCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeave?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragLeaveCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOver?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragOverCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStart?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDragStartCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDrop?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onDropCapture?: import("react").DragEventHandler<HTMLDivElement> | undefined;
        onMouseDown?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseDownCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseEnter?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseLeave?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMove?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseMoveCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOut?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOutCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOver?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseOverCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUp?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onMouseUpCapture?: import("react").MouseEventHandler<HTMLDivElement> | undefined;
        onSelect?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onSelectCapture?: import("react").ReactEventHandler<HTMLDivElement> | undefined;
        onTouchCancel?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchCancelCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEnd?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchEndCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMove?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchMoveCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStart?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onTouchStartCapture?: import("react").TouchEventHandler<HTMLDivElement> | undefined;
        onPointerDown?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerDownCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMove?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerMoveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUp?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerUpCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancel?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerCancelCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnter?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerEnterCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeave?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerLeaveCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOver?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOverCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOut?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onPointerOutCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onGotPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onLostPointerCaptureCapture?: import("react").PointerEventHandler<HTMLDivElement> | undefined;
        onScroll?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onScrollCapture?: import("react").UIEventHandler<HTMLDivElement> | undefined;
        onWheel?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onWheelCapture?: import("react").WheelEventHandler<HTMLDivElement> | undefined;
        onAnimationStart?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationStartCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEnd?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationEndCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIteration?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onAnimationIterationCapture?: import("react").AnimationEventHandler<HTMLDivElement> | undefined;
        onTransitionEnd?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
        onTransitionEndCapture?: import("react").TransitionEventHandler<HTMLDivElement> | undefined;
    }>;
};
